syntax = "proto3";
package neutron.interchainadapter.interchainqueries;

message RegisteredQuery {
  uint64 id = 1; // unique id of registered query
  // defines a query type: `kv` or `tx` now
  string query_type = 2;

  // is used to define KV-storage keys for which we want to get values from remote chain
  repeated KVKey keys = 3;

  // is used to define a filter for transaction search ICQ
  string transactions_filter = 4;

  // is used to identify the chain of interest
  string zone_id = 5;

  // is IBC connection ID for getting ConsensusState to verify proofs
  string connection_id = 6;

  // is used to say how often the query must be updated
  uint64 update_period = 7;

  // is used to say when the event to update the query result was emitted
  uint64 last_emitted_height = 8;

  // is the last block height of the local chain when the query's result was updated
  uint64 last_submitted_result_local_height = 9;

  // is the last block height of the remote chain when the query's result was updated
  uint64 last_submitted_result_remote_height = 10;
}

message KVKey {
  string path = 1;
  bytes key = 2;
}